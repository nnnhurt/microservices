services:
  balancer:
    image: nginx:mainline-alpine3.21
    restart: unless-stopped
    ports:
      - 127.0.0.1:8080:80
    volumes:
      - ./web:/var/www/web
      - ./config/balancer:/etc/nginx/templates
  
  websocket:
    image: centrifugo/centrifugo:v6.1
    restart: unless-stopped
    command: centrifugo -c config.json
    environment:
      - CENTRIFUGO_ADMIN_PASSWORD=${CENTRIFUGO_ADMIN_PASSWORD}
    volumes:
      - ./config/websocket/config.json:/centrifugo/config.json
    ports:
      - 8000:8000
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
  
  database:
    image: postgres:17.4-alpine3.21
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - database-data:/var/lib/postgresql/data


  keycloak:
    image: quay.io/keycloak/keycloak:26.2.0
    restart: unless-stopped
    command: start-dev
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_ADMIN_USER}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_ADMIN_PASS}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://auth-database:5432/${AUTH_DB_NAME}
      - KC_DB_USERNAME=${AUTH_DB_USER}
      - KC_DB_PASSWORD=${AUTH_DB_PASS}

      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8090
      - KC_HTTP_ENABLED=true

      - KC_LOG_LEVEL=info
    depends_on:
      - auth-database
    ports:
      - 8090:8080


  auth-database:
    image: postgres:17.4-alpine3.21
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASS}
      - POSTGRES_DB=${AUTH_DB_NAME}
    ports:
      - 127.0.0.1:5442:5432
    volumes:
      - auth-database-data:/var/lib/postgresql/data

  app:
    build: .
    command: python -m src.server
    volumes:
      - ./:/code
    ports:
      - 127.0.0.1:10000:10000
    depends_on:
      app_database:
        condition: service_healthy


  app_database:
    image: postgres:17.4-alpine3.21
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${APP_DB_USER}
      - POSTGRES_PASSWORD=${APP_DB_PASS}
      - POSTGRES_DB=${APP_DB_NAME}
    ports:
      - 127.0.0.1:5433:5432
    volumes:
      - app-database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "$POSTGRES_USER", "-d", "$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  database-data:
  auth-database-data:
  app-database-data:
